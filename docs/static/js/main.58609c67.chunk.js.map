{"version":3,"sources":["pool/ActionButton.jsx","pool/ScoreCard.jsx","pool/Nineball.jsx","pool/PlayerSelect.jsx","pool/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["ActionButton","styled","button","props","foul","miss","pot","nine","Cell","div","ScoreDiv","score","ScoreCard","players","length","sort","a","b","map","p","key","name","random","count","Math","floor","PlayState","this","gameOver","playersCopy","idx","current","splice","previous","array","counter","index","temp","shuffle","next","ScoreButtonHolder","WhoseTurnNow","Nineball","useState","setPlayers","turnState","setTurnState","setPlayState","action","thisState","scoreFun","thisPlayers","find","reverse","slice","push","onClick","PlayerHolder","Player","selected","PS","PlayerInput","input","AddPlayerButton","playerRostom","PlayerSelect","callback","playerName","setPlayerName","onSubmit","e","preventDefault","newPlayer","addPlayer","type","value","onChange","target","player","pl","togglePlayer","filter","Vertical","Home","mode","setMode","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58609c67.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ActionButton = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 10px;\r\n  width: 25%;\r\n  height: 150px;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  border: solid 1px black;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n\r\n  h4 {\r\n    font-size: 24px;\r\n  }\r\n\r\n  ${props => `\r\n    ${props.foul ? `background-color: red;` : ``}\r\n    ${props.miss ? `background-color: orange;` : ``}\r\n    ${props.pot ? `background-color: lightskyblue;` : ``}\r\n    ${props.nine ? `background-color: limegreen;` : ``}\r\n\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Cell = styled.div`\r\n  width: 50%;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n\r\n  &:not(:first-child) {\r\n    border-left: solid 1px black;\r\n  }\r\n`;\r\n\r\nconst ScoreDiv = styled.div`\r\n  margin: auto;\r\n  width: 400px;\r\n  display: flex;\r\n\r\n  &:not(:last-child) {\r\n    border-bottom: solid 1px black;\r\n  }\r\n\r\n  ${props =>\r\n    props.score && props.score > 0\r\n      ? `color: darkgreen; background-color: #90d8a7;`\r\n      : ``};\r\n\r\n  ${props =>\r\n    props.score && props.score < 0\r\n      ? `color: darkred; background-color: #db9f9f;`\r\n      : ``};\r\n`;\r\n\r\nexport const ScoreCard = props => {\r\n  const { players } = props;\r\n\r\n  if (players && players.length) {\r\n    return (\r\n      <div>\r\n        <h4>Current score</h4>\r\n        <ScoreDiv>\r\n          <Cell>Name</Cell>\r\n          <Cell>Score</Cell>\r\n        </ScoreDiv>\r\n        <>\r\n          {players\r\n            .sort((a, b) => b.score - a.score)\r\n            .map(p => (\r\n              <ScoreDiv score={p.score} key={p.name}>\r\n                <Cell>{p.name}</Cell>\r\n                <Cell>{p.score}</Cell>\r\n              </ScoreDiv>\r\n            ))}\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { ActionButton } from \"./ActionButton\";\r\nimport { ScoreCard } from \"./ScoreCard\";\r\n\r\nconst scoreFun = ({ foul, pot, nine }) => pot + !foul * 4.5 * nine - 1.5 * foul;\r\n\r\nconst random = count => Math.floor(Math.random() * count);\r\n\r\nconst shuffle = array => {\r\n  let counter = array.length;\r\n\r\n  // While there are elements in the array\r\n  while (counter > 0) {\r\n    // Pick a random index\r\n    let index = Math.floor(Math.random() * counter);\r\n\r\n    // Decrease counter by 1\r\n    counter--;\r\n\r\n    // And swap the last element with it\r\n    let temp = array[counter];\r\n    array[counter] = array[index];\r\n    array[index] = temp;\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nclass Player {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.score = 0;\r\n  }\r\n}\r\n\r\nclass PlayState {\r\n  constructor(players) {\r\n    this.foul = false;\r\n    this.miss = false;\r\n    this.pot = 0;\r\n    this.nine = false;\r\n    this.gameOver = false;\r\n\r\n    let playersCopy = [...players];\r\n\r\n    let idx = random(playersCopy.length);\r\n    this.current = playersCopy[idx].name;\r\n    playersCopy.splice(idx, 1);\r\n    idx = random(playersCopy.length);\r\n    this.previous = playersCopy[idx].name;\r\n    playersCopy.splice(idx, 1);\r\n\r\n    shuffle(playersCopy);\r\n    this.next = playersCopy.map(p => p.name);\r\n  }\r\n}\r\n\r\nconst ScoreButtonHolder = styled.div`\r\n  display: flex;\r\n  max-width: 80%;\r\n  margin: auto;\r\n`;\r\n\r\nconst WhoseTurnNow = styled.div`\r\n  margin: auto;\r\n  margin-top: 10px;\r\n  font-size: 24px;\r\n  border: 1px solid black;\r\n  border-radius: 8px;\r\n  background-color: yellow;\r\n  width: 20%;\r\n  height: 100px;\r\n`;\r\n\r\nconst Nineball = props => {\r\n  const [players, setPlayers] = useState(props.players);\r\n\r\n  const [turnState, setTurnState] = useState(new PlayState(players));\r\n\r\n  const addPlayer = name => {\r\n    let curPlayers = [...players];\r\n    curPlayers.push(new Player(name));\r\n    setPlayers(curPlayers);\r\n  };\r\n\r\n  const setPlayState = action => {\r\n    let thisState = { ...turnState };\r\n    if (action === \"reset\") {\r\n      thisState.foul = false;\r\n      thisState.miss = false;\r\n      thisState.pot = 0;\r\n      thisState.nine = false;\r\n    } else if (action === \"foul\") {\r\n      thisState.foul = !thisState.foul;\r\n    } else if (action === \"miss\") {\r\n      thisState.miss = !thisState.miss;\r\n    } else if (action === \"pot\") {\r\n      thisState.pot += 1;\r\n    } else if (action === \"nine\") {\r\n      thisState.nine = !thisState.nine;\r\n    } else if (action === \"submit\") {\r\n      if (!thisState.foul && !thisState.miss && !thisState.nine) {\r\n        thisState.pot = 0;\r\n      } else {\r\n        let score = scoreFun(thisState);\r\n        let thisPlayers = [...players];\r\n        let currentPlayer = thisPlayers.find(p => p.name === thisState.current);\r\n        currentPlayer.score += score;\r\n\r\n        let next, previous, current;\r\n\r\n        if (thisState.nine) {\r\n          current = thisState.current;\r\n          previous = thisState.previous;\r\n          next = thisState.next;\r\n        } else if (thisState.foul && thisState.pot === 0) {\r\n          current = thisState.previous;\r\n          previous = thisState.current;\r\n          next = thisState.next.reverse();\r\n        } else {\r\n          current = thisState.next[0];\r\n          previous = thisState.current;\r\n          next = thisState.next.slice(1);\r\n          next.push(thisState.previous);\r\n        }\r\n\r\n        if (thisState.nine) {\r\n          thisState.gameOver = true;\r\n        }\r\n\r\n        thisState.current = current;\r\n        thisState.previous = previous;\r\n        thisState.next = next;\r\n\r\n        thisState.foul = false;\r\n        thisState.miss = false;\r\n        thisState.pot = 0;\r\n\r\n        setPlayers(thisPlayers);\r\n      }\r\n    }\r\n\r\n    setTurnState(thisState);\r\n  };\r\n\r\n  const newGame = () => {\r\n    setTurnState(new PlayState(players));\r\n  };\r\n\r\n  if (turnState.gameOver) {\r\n    return (\r\n      <div>\r\n        <ScoreCard players={players} />\r\n        <ActionButton onClick={newGame} nine={true}>\r\n          New round\r\n        </ActionButton>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <WhoseTurnNow>\r\n          <h4>{turnState.current}</h4>\r\n          <h4>It's your turn</h4>\r\n        </WhoseTurnNow>\r\n      </div>\r\n      <div>\r\n        <h4>Action</h4>\r\n        <ScoreButtonHolder>\r\n          <ActionButton\r\n            onClick={() => setPlayState(\"foul\")}\r\n            foul={turnState.foul}\r\n          >\r\n            Foul\r\n          </ActionButton>\r\n          <ActionButton\r\n            onClick={() => setPlayState(\"miss\")}\r\n            miss={turnState.miss}\r\n          >\r\n            Miss\r\n          </ActionButton>\r\n          <ActionButton onClick={() => setPlayState(\"pot\")} pot={turnState.pot}>\r\n            Potted {turnState.pot}\r\n          </ActionButton>\r\n          <ActionButton\r\n            onClick={() => setPlayState(\"nine\")}\r\n            nine={turnState.nine}\r\n          >\r\n            Nine\r\n          </ActionButton>\r\n        </ScoreButtonHolder>\r\n        <ActionButton\r\n          onClick={() => setPlayState(\"reset\")}\r\n          foul={\r\n            turnState.foul || turnState.nine || turnState.miss || turnState.pot\r\n          }\r\n        >\r\n          Reset\r\n        </ActionButton>\r\n        <ActionButton\r\n          onClick={() => setPlayState(\"submit\")}\r\n          pot={turnState.foul || turnState.nine || turnState.miss}\r\n        >\r\n          Submit\r\n        </ActionButton>\r\n      </div>\r\n      <div>\r\n        <h4>Who is next</h4>\r\n        <ActionButton onClick={() => setPlayState(\"foul\")}>\r\n          <h4>On Foul</h4>\r\n          <h4>{turnState.previous}</h4>\r\n        </ActionButton>\r\n        <ActionButton onClick={() => setPlayState(\"miss\")}>\r\n          <h4>On Miss</h4>\r\n          <h4>{turnState.next[0]}</h4>\r\n        </ActionButton>\r\n      </div>\r\n      <ScoreCard players={players} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nineball;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { ActionButton } from \"./ActionButton\";\r\n\r\nconst PlayerHolder = styled.div`\r\n  display: flex;\r\n  max-width: 1080px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Player = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: auto;\r\n  justify-content: center;\r\n  border: solid 1px black;\r\n  border-radius: 8px;\r\n  width: 150px;\r\n  height: 50px;\r\n\r\n  ${props => `\r\n    background-color: ${props.selected ? `lightgreen;` : `burlywood;`}\r\n\r\n    `}\r\n`;\r\n\r\nconst PS = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst PlayerInput = styled.input`\r\n  border: 1px solid black;\r\n  margin-right: 10px;\r\n  border-radius: 8px;\r\n  font-size: 18px;\r\n  padding: 3px;\r\n  height: 34px;\r\n`;\r\n\r\nconst AddPlayerButton = styled.button`\r\n  border: 1px solid black;\r\n  border-radius: 8px;\r\n  height: 40px;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst playerRostom = [\"Adriana\", \"Alex\", \"Marcus\", \"Peter\", \"Petra\"];\r\n\r\nexport const PlayerSelect = props => {\r\n  const { callback } = props;\r\n\r\n  const [players, setPlayers] = useState(\r\n    playerRostom.map(p => ({ name: p, score: 0, selected: false }))\r\n  );\r\n  const [playerName, setPlayerName] = useState(\"\");\r\n\r\n  const togglePlayer = p => {\r\n    let newPlayer = [...players];\r\n    let player = players.find(pl => pl === p);\r\n    player.selected = !player.selected;\r\n    setPlayers(newPlayer);\r\n  };\r\n\r\n  const addPlayer = p => {\r\n    let newPlayer = [...players];\r\n    newPlayer.push({ name: p, score: 0, selected: true });\r\n    setPlayers(newPlayer);\r\n  };\r\n\r\n  const onStart = () => {\r\n    callback(players.filter(p => p.selected));\r\n  };\r\n\r\n  return (\r\n    <PS>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPlayer(playerName);\r\n          setPlayerName(\"\");\r\n        }}\r\n      >\r\n        <PlayerInput\r\n          type=\"text\"\r\n          value={playerName}\r\n          onChange={e => setPlayerName(e.target.value)}\r\n        />\r\n        <AddPlayerButton>Add</AddPlayerButton>\r\n      </form>\r\n\r\n      <PlayerHolder>\r\n        {players.map(p => (\r\n          <Player\r\n            onClick={() => togglePlayer(p)}\r\n            key={p.name}\r\n            selected={p.selected}\r\n          >\r\n            {p.name}\r\n          </Player>\r\n        ))}\r\n      </PlayerHolder>\r\n\r\n      <ActionButton\r\n        onClick={onStart}\r\n        nine={players.filter(p => p.selected).length > 1}\r\n      >\r\n        Save\r\n      </ActionButton>\r\n    </PS>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { ActionButton } from \"./ActionButton\";\r\n\r\nimport Nineball from \"./Nineball\";\r\nimport { PlayerSelect } from \"./PlayerSelect\";\r\n\r\nconst Vertical = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Home = props => {\r\n  const [mode, setMode] = useState(\"\");\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  const playerSelectCallback = p => {\r\n    setPlayers(p);\r\n    setMode(\"\");\r\n  };\r\n\r\n  if (mode === \"nine\") {\r\n    return <Nineball players={players} />;\r\n  } else if (mode === \"playerSelect\") {\r\n    return <PlayerSelect callback={playerSelectCallback} />;\r\n  }\r\n\r\n  return (\r\n    <Vertical>\r\n      <ActionButton\r\n        onClick={() => setMode(\"playerSelect\")}\r\n        pot={players.length > 1}\r\n      >\r\n        Select players\r\n      </ActionButton>\r\n      <ActionButton onClick={() => setMode(\"nine\")} nine={players.length > 2}>\r\n        9 ball pool\r\n      </ActionButton>\r\n    </Vertical>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Home from \"./pool/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}